
# This yaml involves configurations to create an AWS stack of resources using cloudformation

Parameters:
  parameterIPForSSHAccess:
    Description: Enter the IP address(or range) of the ssh clients which can access the EC2 instance. This is to add a layer of security by limiting SSH access to a specific number of clients. Failing to configure this parameter, a client with any IP address can gain SSH access to the EC2 instance if he has the required key pair
    Type: String
    Default: 0.0.0.0/0

  parameterIPForLoadBalancerAccess:
    Description: Enter the IP address(or range) of the HTTP clients which can hit the Application Load Balancer(ALB). This is to add a layer of security by limiting HTTP access to a specific number of clients. Failing to configure this parameter, a client with any IP address can access the ALB.
    Type: String
    Default: 0.0.0.0/0
    
  parameterUserData:
    Description: script which will act as a userdata to initialize the EC2 instance during boot time 
    Type: String
    
  parameterSSHKeyPair:
    Description: Enter the key-pair name which shall be used for SSH access 
    Type: String
    Default: my-key-pair

# create an EC2 instance 
Resources:
  resourceEC2:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-south-1a
      ImageId: ami-0b44050b2d893d5f7
      InstanceType: t2.micro
      KeyName: !Ref parameterSSHKeyPair
      UserData: !Ref parameterUserData
      SecurityGroups:
        - !Ref resourceSecurityGroupForEC2
      IamInstanceProfile : !Ref resourceEC2InstanceProfile
      Tags: 
        - Key: Name
          Value: Django-EC2Instance
        - Key: Name
          Value: codedeploy


# security group for the EC2 instance. Allows traffic on port 8080 only from the load balancer. Allows ssh access to defined clients on port 22 
  resourceSecurityGroupForEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
     GroupDescription: Allows traffic on port 8080 only from the Application Load Balancer(ALB). Allows ssh access to defined clients on port 22
     SecurityGroupIngress:
     - CidrIp: !Ref resourceSecurityGroupForLoadBalancer
       IpProtocol: tcp
       FromPort: 8080
       ToPort: 8080
     - CidrIp: !Ref parameterIPForSSHAccess
       IpProtocol: tcp
       FromPort: 22
       ToPort: 22

  resourceSecurityGroupForLoadBalancer:
    Type: AWS::EC2::SecurityGroup
    Properties:
     GroupDescription: Allows traffic on port 80 from the defined clients
     SecurityGroupIngress:
     - CidrIp: !Ref parameterIPForLoadBalancerAccess
       IpProtocol: tcp
       FromPort: 80
       ToPort: 80


# IAM role for EC2 to gain S3 read-only access. This is required to fetch build artifacts from the S3 bucket during the CodePipeline operations.
  resourceEC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess   


# Instance profile for EC2. It acts as a container for the role
  resourceEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref resourceEC2Role        
   






